Architectural notes on GlueObjects (PageObjects with that work as glue for cucumber).

***************************************************
On GlueObjects (PageObjects with glue notation)
***************************************************

1- Inheritance.
    a- Classes with Step or Hook notations cannot be inherited, because of this is highly recommended to make them
    FINAL to avoid confusions in the future when trying to inherit them.

    b- Parent classes/interfaces cannot define abstract methods for children classes with Step or Hook notations,
    cucumber doesn't support this and gives an error DuplicateStepDefinition so behavior enforcing is not allowed
    (Created issue https://github.com/cucumber/cucumber-jvm/issues/2757)

2- Instantiation and Constructors:
    In order for Cucumber to make usage of the Steps and Hooks in a class, it needs to make an instantiation of it
    not being aware of the required arguments for the constructor, giving an error for classes defined with only one
    constructor with 1 or more arguments. This can be sorted with multiple approaches:
        * GlueObjects are wrapper classes/children of our desired pageObjects but this leads to:
            - Class duplication for each PageObject
            - Broken logic between the Base and the Glue class, making a responsibility mess and method definition hell
        * Init method with ThreadLocal for params and "super" call:
            - Init method is going to be called before the instantiation, requiring to be static, because the static
            environment, decided to use a threadLocal to set the desired parameter and call super constructor (can have
            arguments). See GoogleResultPage class.

3- Directory allocation:
    Glue steps can be defined in main directory, just changing the cucumber runner removing the dynamic reference in
    the path like glue = {"org.seleniumTest"}

4- Driver Management and runner classes:
    In order to have a suites at the same time, we cannot share the same runner class like BaseTest since:
        * In order to TestNG classes to be executed, said classes need to inherit the ITestListener from BaseTest
        (where we do the BeforeSuite, BeforeMethod and AfterMethod) but if we add the cucumber notations here, as we
        mentioned before, BaseTest cannot be inherited, because of this, decided to move the Before, After and BeforeAll
        cucumber notations to CucumberRunnerTests class since it is going to be there anyway and implements
        AbstractTestNGCucumberTests.

        *All shared logic is managed by DriverManager class and is called by respective runners.

5- All glue steps for the moment requires @Step and @$Hook notation in order to be consumed for allure in testNG context
    and have the cucumber hook (investigation better implementation)

***************************************************
On Allure
***************************************************

1- In order to allure to avoid consuming each cucumber example as retries, we need to parametrize the step name using
notation like "Scenario name <variable>" and will generate a new execution for each in the report, however, this will
take each example as a new test, to have a correct representation of test, we may need to implement Categories